{
  "type": "File",
  "program": {
    "type": "Program",
    "sourceType": "module",
    "interpreter": null,
    "body": [
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "Identifier",
            "name": "b",
            "extra": {
              "parenthesized": true,
              "parenStart": 42
            }
          },
          "alternate": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "c"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "d"
            }
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ArrowFunctionExpression",
            "predicate": null,
            "returnType": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
                "id": {
                  "type": "Identifier",
                  "name": "c"
                }
              }
            },
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "b"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "d"
            }
          },
          "alternate": {
            "type": "Identifier",
            "name": "e"
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "Identifier",
            "name": "b",
            "extra": {
              "parenthesized": true,
              "parenStart": 127
            }
          },
          "alternate": {
            "type": "ArrowFunctionExpression",
            "predicate": null,
            "returnType": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
                "id": {
                  "type": "Identifier",
                  "name": "d"
                }
              }
            },
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "c"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "e"
            }
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "Identifier",
              "name": "b"
            },
            "right": {
              "type": "ArrowFunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "c"
                }
              ],
              "body": {
                "type": "Identifier",
                "name": "d"
              }
            },
            "extra": {
              "parenthesized": true,
              "parenStart": 221
            }
          },
          "alternate": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "e"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "f"
            }
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ArrowFunctionExpression",
            "predicate": null,
            "returnType": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
                "id": {
                  "type": "Identifier",
                  "name": "e"
                }
              }
            },
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "AssignmentPattern",
                "left": {
                  "type": "Identifier",
                  "name": "b"
                },
                "right": {
                  "type": "ArrowFunctionExpression",
                  "id": null,
                  "generator": false,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "c"
                    }
                  ],
                  "body": {
                    "type": "Identifier",
                    "name": "d"
                  }
                }
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "f"
            }
          },
          "alternate": {
            "type": "Identifier",
            "name": "g"
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "b"
          },
          "consequent": {
            "type": "ConditionalExpression",
            "test": {
              "type": "Identifier",
              "name": "c"
            },
            "consequent": {
              "type": "ArrowFunctionExpression",
              "predicate": null,
              "returnType": {
                "type": "TypeAnnotation",
                "typeAnnotation": {
                  "type": "GenericTypeAnnotation",
                  "typeParameters": null,
                  "id": {
                    "type": "Identifier",
                    "name": "e"
                  }
                }
              },
              "id": null,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "d"
                }
              ],
              "body": {
                "type": "Identifier",
                "name": "f",
                "extra": {
                  "parenthesized": true,
                  "parenStart": 406
                }
              }
            },
            "alternate": {
              "type": "Identifier",
              "name": "g"
            }
          },
          "alternate": {
            "type": "Identifier",
            "name": "h"
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ConditionalExpression",
            "test": {
              "type": "Identifier",
              "name": "b"
            },
            "consequent": {
              "type": "ConditionalExpression",
              "test": {
                "type": "Identifier",
                "name": "c"
              },
              "consequent": {
                "type": "Identifier",
                "name": "d",
                "extra": {
                  "parenthesized": true,
                  "parenStart": 466
                }
              },
              "alternate": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "e"
                  }
                ],
                "body": {
                  "type": "Identifier",
                  "name": "f",
                  "extra": {
                    "parenthesized": true,
                    "parenStart": 477
                  }
                }
              }
            },
            "alternate": {
              "type": "Identifier",
              "name": "g"
            }
          },
          "alternate": {
            "type": "Identifier",
            "name": "h"
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ConditionalExpression",
            "test": {
              "type": "Identifier",
              "name": "b"
            },
            "consequent": {
              "type": "Identifier",
              "name": "c",
              "extra": {
                "parenthesized": true,
                "parenStart": 539
              }
            },
            "alternate": {
              "type": "ArrowFunctionExpression",
              "predicate": null,
              "returnType": {
                "type": "TypeAnnotation",
                "typeAnnotation": {
                  "type": "GenericTypeAnnotation",
                  "typeParameters": null,
                  "id": {
                    "type": "Identifier",
                    "name": "e"
                  }
                }
              },
              "id": null,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "d"
                }
              ],
              "body": {
                "type": "Identifier",
                "name": "f"
              }
            }
          },
          "alternate": {
            "type": "Identifier",
            "name": "g"
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ArrowFunctionExpression",
            "predicate": null,
            "returnType": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
                "id": {
                  "type": "Identifier",
                  "name": "c"
                }
              }
            },
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "b"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "d"
            }
          },
          "alternate": {
            "type": "ArrowFunctionExpression",
            "predicate": null,
            "returnType": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
                "id": {
                  "type": "Identifier",
                  "name": "f"
                }
              }
            },
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "e"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "g"
            }
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ArrowFunctionExpression",
            "predicate": null,
            "returnType": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
                "id": {
                  "type": "Identifier",
                  "name": "c"
                }
              }
            },
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "b"
              }
            ],
            "body": {
              "type": "ArrowFunctionExpression",
              "predicate": null,
              "returnType": {
                "type": "TypeAnnotation",
                "typeAnnotation": {
                  "type": "GenericTypeAnnotation",
                  "typeParameters": null,
                  "id": {
                    "type": "Identifier",
                    "name": "e"
                  }
                }
              },
              "id": null,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "d"
                }
              ],
              "body": {
                "type": "Identifier",
                "name": "f"
              }
            }
          },
          "alternate": {
            "type": "Identifier",
            "name": "g"
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "Identifier",
            "name": "b",
            "extra": {
              "parenthesized": true,
              "parenStart": 846
            }
          },
          "alternate": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "c"
              }
            ],
            "body": {
              "type": "ArrowFunctionExpression",
              "predicate": null,
              "returnType": {
                "type": "TypeAnnotation",
                "typeAnnotation": {
                  "type": "GenericTypeAnnotation",
                  "typeParameters": null,
                  "id": {
                    "type": "Identifier",
                    "name": "e"
                  }
                }
              },
              "id": null,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "d"
                }
              ],
              "body": {
                "type": "Identifier",
                "name": "f"
              },
              "typeParameters": {
                "type": "TypeParameterDeclaration",
                "params": [
                  {
                    "type": "TypeParameter",
                    "name": "T",
                    "variance": null
                  }
                ]
              }
            }
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ArrowFunctionExpression",
            "predicate": null,
            "returnType": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
                "id": {
                  "type": "Identifier",
                  "name": "c"
                }
              }
            },
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "b"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "d",
              "extra": {
                "parenthesized": true,
                "parenStart": 927
              }
            },
            "typeParameters": {
              "type": "TypeParameterDeclaration",
              "params": [
                {
                  "type": "TypeParameter",
                  "name": "T",
                  "variance": null
                }
              ]
            }
          },
          "alternate": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "e"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "f"
            }
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "b"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "c"
            },
            "extra": {
              "parenthesized": true,
              "parenStart": 1021
            }
          },
          "alternate": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "d"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "e"
            }
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ConditionalExpression",
            "test": {
              "type": "Identifier",
              "name": "b"
            },
            "consequent": {
              "type": "ArrowFunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "c"
                }
              ],
              "body": {
                "type": "Identifier",
                "name": "d"
              },
              "extra": {
                "parenthesized": true,
                "parenStart": 1075
              }
            },
            "alternate": {
              "type": "ArrowFunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "e"
                }
              ],
              "body": {
                "type": "Identifier",
                "name": "f"
              }
            }
          },
          "alternate": {
            "type": "Identifier",
            "name": "g"
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ArrowFunctionExpression",
            "predicate": null,
            "returnType": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
                "id": {
                  "type": "Identifier",
                  "name": "c"
                }
              }
            },
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "b"
              }
            ],
            "body": {
              "type": "ArrowFunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "d"
                }
              ],
              "body": {
                "type": "Identifier",
                "name": "e"
              },
              "extra": {
                "parenthesized": true,
                "parenStart": 1213
              }
            }
          },
          "alternate": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "f"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "g"
            }
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ConditionalExpression",
            "test": {
              "type": "Identifier",
              "name": "b"
            },
            "consequent": {
              "type": "ArrowFunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "c"
                }
              ],
              "body": {
                "type": "Identifier",
                "name": "d"
              },
              "extra": {
                "parenthesized": true,
                "parenStart": 1279
              }
            },
            "alternate": {
              "type": "ArrowFunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "e"
                }
              ],
              "body": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "f"
                  }
                ],
                "body": {
                  "type": "Identifier",
                  "name": "g"
                },
                "extra": {
                  "parenthesized": true,
                  "parenStart": 1295
                }
              }
            }
          },
          "alternate": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "h"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "i"
            }
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ArrowFunctionExpression",
            "predicate": null,
            "returnType": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "FunctionTypeAnnotation",
                "params": [
                  {
                    "type": "FunctionTypeParam",
                    "name": null,
                    "optional": false,
                    "typeAnnotation": {
                      "type": "GenericTypeAnnotation",
                      "typeParameters": null,
                      "id": {
                        "type": "Identifier",
                        "name": "c"
                      }
                    }
                  }
                ],
                "rest": null,
                "returnType": {
                  "type": "GenericTypeAnnotation",
                  "typeParameters": null,
                  "id": {
                    "type": "Identifier",
                    "name": "d"
                  }
                },
                "typeParameters": null
              }
            },
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "b"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "e"
            }
          },
          "alternate": {
            "type": "Identifier",
            "name": "f"
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "async"
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "b"
              }
            ]
          },
          "alternate": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "c"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "d"
            }
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ArrowFunctionExpression",
            "returnType": {
              "type": "TypeAnnotation",
              "typeAnnotation": {
                "type": "GenericTypeAnnotation",
                "typeParameters": null,
                "id": {
                  "type": "Identifier",
                  "name": "c"
                }
              }
            },
            "id": null,
            "generator": false,
            "async": true,
            "params": [
              {
                "type": "Identifier",
                "name": "b"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "d"
            }
          },
          "alternate": {
            "type": "Identifier",
            "name": "e"
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "async"
            },
            "arguments": [
              {
                "type": "ArrowFunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "b"
                  }
                ],
                "body": {
                  "type": "Identifier",
                  "name": "c"
                }
              }
            ]
          },
          "alternate": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "d"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "e"
            }
          }
        }
      },
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "ConditionalExpression",
          "test": {
            "type": "Identifier",
            "name": "a"
          },
          "consequent": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "generator": false,
            "async": true,
            "params": [
              {
                "type": "Identifier",
                "name": "b"
              }
            ],
            "body": {
              "type": "ArrowFunctionExpression",
              "id": null,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "name": "c"
                }
              ],
              "body": {
                "type": "Identifier",
                "name": "d"
              },
              "extra": {
                "parenthesized": true,
                "parenStart": 1679
              }
            }
          },
          "alternate": {
            "type": "ArrowFunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "e"
              }
            ],
            "body": {
              "type": "Identifier",
              "name": "f"
            }
          }
        }
      },
      {
        "type": "VariableDeclaration",
        "declarations": [
          {
            "type": "VariableDeclarator",
            "id": {
              "type": "Identifier",
              "name": "icecream"
            },
            "init": {
              "type": "ConditionalExpression",
              "test": {
                "type": "BinaryExpression",
                "left": {
                  "type": "Identifier",
                  "name": "what"
                },
                "operator": "==",
                "right": {
                  "type": "StringLiteral",
                  "extra": {
                    "rawValue": "cone",
                    "raw": "\"cone\""
                  },
                  "value": "cone"
                }
              },
              "consequent": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "p"
                  }
                ],
                "body": {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "prefix": true,
                    "argument": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "prefix": true,
                      "argument": {
                        "type": "Identifier",
                        "name": "p"
                      }
                    }
                  },
                  "consequent": {
                    "type": "TemplateLiteral",
                    "expressions": [
                      {
                        "type": "Identifier",
                        "name": "p"
                      }
                    ],
                    "quasis": [
                      {
                        "type": "TemplateElement",
                        "value": {
                          "raw": "here's your ",
                          "cooked": "here's your "
                        },
                        "tail": false
                      },
                      {
                        "type": "TemplateElement",
                        "value": {
                          "raw": " cone",
                          "cooked": " cone"
                        },
                        "tail": true
                      }
                    ]
                  },
                  "alternate": {
                    "type": "TemplateLiteral",
                    "expressions": [],
                    "quasis": [
                      {
                        "type": "TemplateElement",
                        "value": {
                          "raw": "just the empty cone for you",
                          "cooked": "just the empty cone for you"
                        },
                        "tail": true
                      }
                    ]
                  },
                  "extra": {
                    "parenthesized": true,
                    "parenStart": 1830
                  }
                }
              },
              "alternate": {
                "type": "ArrowFunctionExpression",
                "id": null,
                "generator": false,
                "async": false,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "p"
                  }
                ],
                "body": {
                  "type": "TemplateLiteral",
                  "expressions": [
                    {
                      "type": "Identifier",
                      "name": "p"
                    },
                    {
                      "type": "Identifier",
                      "name": "what"
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "here's your ",
                        "cooked": "here's your "
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": " ",
                        "cooked": " "
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "value": {
                        "raw": "",
                        "cooked": ""
                      },
                      "tail": true
                    }
                  ]
                }
              }
            }
          }
        ],
        "kind": "let"
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentLine",
      "value": " Valid lhs value inside parentheses"
    },
    {
      "type": "CommentLine",
      "value": " a ? b : (c => d)"
    },
    {
      "type": "CommentLine",
      "value": " a ? ((b): c => d) : e"
    },
    {
      "type": "CommentLine",
      "value": " a ? b : ((c): d => e)"
    },
    {
      "type": "CommentLine",
      "value": " Nested arrow function inside parentheses"
    },
    {
      "type": "CommentLine",
      "value": " a ? (b = (c) => d) : (e => f)"
    },
    {
      "type": "CommentLine",
      "value": " a ? ((b = (c) => d): e => f) : g"
    },
    {
      "type": "CommentLine",
      "value": " Nested conditional expressions"
    },
    {
      "type": "CommentLine",
      "value": " b ? (c ? ((d): e => f) : g) : h"
    },
    {
      "type": "CommentLine",
      "value": " a ? (b ? (c ? d : (e => f)) : g) : h"
    },
    {
      "type": "CommentLine",
      "value": " a ? (b ? c : ((d): e => f)) : g"
    },
    {
      "type": "CommentLine",
      "value": " Multiple arrow functions"
    },
    {
      "type": "CommentLine",
      "value": " a ? ((b): c => d) : ((e): f => g)"
    },
    {
      "type": "CommentLine",
      "value": " Multiple nested arrow functions (<T> is needed to avoid ambiguities)"
    },
    {
      "type": "CommentLine",
      "value": " a ? ((b): c => ((d): e => f)) : g"
    },
    {
      "type": "CommentLine",
      "value": " a ? b : (c => (<T>(d): e => f))"
    },
    {
      "type": "CommentLine",
      "value": " a ? (<T>(b): c => d) : (e => f)"
    },
    {
      "type": "CommentLine",
      "value": " Invalid lhs value inside parentheses"
    },
    {
      "type": "CommentLine",
      "value": " a ? (b => c) : (d => e)"
    },
    {
      "type": "CommentLine",
      "value": " a ? (b ? (c => d) : (e => f)) : g"
    },
    {
      "type": "CommentLine",
      "value": " Invalid lhs value inside parentheses inside arrow function"
    },
    {
      "type": "CommentLine",
      "value": " a ? ((b): c => (d => e)) : (f => g)"
    },
    {
      "type": "CommentLine",
      "value": " a ? (b ? (c => d) : (e => (f => g))) : (h => i)"
    },
    {
      "type": "CommentLine",
      "value": " Function as type annotation"
    },
    {
      "type": "CommentLine",
      "value": " a ? ((b): (c => d) => e) : f"
    },
    {
      "type": "CommentLine",
      "value": " Async functions or calls"
    },
    {
      "type": "CommentLine",
      "value": " a ? (async(b)) : (c => d)"
    },
    {
      "type": "CommentLine",
      "value": " a ? (async (b): c => d) : e"
    },
    {
      "type": "CommentLine",
      "value": " a ? (async(b => c)) : (d => e)"
    },
    {
      "type": "CommentLine",
      "value": " a ? (async (b) => c => d) : (e => f)"
    },
    {
      "type": "CommentLine",
      "value": " https://github.com/prettier/prettier/issues/2194"
    }
  ]
}
