{
  "type": "File",
  "program": {
    "type": "Program",
    "sourceType": "script",
    "interpreter": null,
    "body": [
      {
        "type": "ClassDeclaration",
        "id": {
          "type": "Identifier",
          "name": "Foo"
        },
        "superClass": null,
        "body": {
          "type": "ClassBody",
          "body": [
            {
              "type": "ClassPrivateMethod",
              "static": false,
              "key": {
                "type": "PrivateName",
                "id": {
                  "type": "Identifier",
                  "name": "readLines"
                }
              },
              "computed": false,
              "kind": "method",
              "id": null,
              "generator": true,
              "async": true,
              "params": [
                {
                  "type": "Identifier",
                  "name": "path"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "file"
                        },
                        "init": {
                          "type": "AwaitExpression",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "fileOpen"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "path"
                              }
                            ]
                          }
                        }
                      }
                    ],
                    "kind": "let"
                  },
                  {
                    "type": "TryStatement",
                    "block": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "WhileStatement",
                          "test": {
                            "type": "UnaryExpression",
                            "operator": "!",
                            "prefix": true,
                            "argument": {
                              "type": "MemberExpression",
                              "object": {
                                "type": "Identifier",
                                "name": "file"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "EOF"
                              },
                              "computed": false
                            }
                          },
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "YieldExpression",
                                  "delegate": false,
                                  "argument": {
                                    "type": "AwaitExpression",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "object": {
                                          "type": "Identifier",
                                          "name": "file"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "readLine"
                                        },
                                        "computed": false
                                      },
                                      "arguments": []
                                    }
                                  }
                                }
                              }
                            ],
                            "directives": []
                          }
                        }
                      ],
                      "directives": []
                    },
                    "handler": null,
                    "guardedHandlers": [],
                    "finalizer": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AwaitExpression",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "object": {
                                  "type": "Identifier",
                                  "name": "file"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "close"
                                },
                                "computed": false
                              },
                              "arguments": []
                            }
                          }
                        }
                      ],
                      "directives": []
                    }
                  }
                ],
                "directives": []
              }
            }
          ]
        }
      }
    ],
    "directives": []
  }
}
