{
  "type": "File",
  "program": {
    "type": "Program",
    "sourceType": "script",
    "interpreter": null,
    "body": [
      {
        "type": "ExpressionStatement",
        "expression": {
          "type": "AssignmentExpression",
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "object": {
              "type": "Identifier",
              "name": "module"
            },
            "property": {
              "type": "Identifier",
              "name": "exports"
            },
            "computed": false
          },
          "right": {
            "type": "FunctionExpression",
            "id": null,
            "generator": false,
            "async": false,
            "params": [
              {
                "type": "Identifier",
                "name": "context"
              }
            ],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "isConstant"
                  },
                  "generator": false,
                  "async": false,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "node"
                    }
                  ],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "SwitchStatement",
                        "discriminant": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "node"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          },
                          "computed": false
                        },
                        "cases": [
                          {
                            "type": "SwitchCase",
                            "consequent": [
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "isConstant"
                                  },
                                  "arguments": [
                                    {
                                      "type": "MemberExpression",
                                      "object": {
                                        "type": "MemberExpression",
                                        "object": {
                                          "type": "Identifier",
                                          "name": "node"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "expressions"
                                        },
                                        "computed": false
                                      },
                                      "property": {
                                        "type": "BinaryExpression",
                                        "left": {
                                          "type": "MemberExpression",
                                          "object": {
                                            "type": "MemberExpression",
                                            "object": {
                                              "type": "Identifier",
                                              "name": "node"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "expressions"
                                            },
                                            "computed": false
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "length"
                                          },
                                          "computed": false
                                        },
                                        "operator": "-",
                                        "right": {
                                          "type": "NumericLiteral",
                                          "extra": {
                                            "rawValue": 1,
                                            "raw": "1"
                                          },
                                          "value": 1
                                        }
                                      },
                                      "computed": true
                                    }
                                  ]
                                }
                              }
                            ],
                            "test": {
                              "type": "StringLiteral",
                              "extra": {
                                "rawValue": "SequenceExpression",
                                "raw": "\"SequenceExpression\""
                              },
                              "value": "SequenceExpression"
                            }
                          }
                        ]
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "BooleanLiteral",
                          "value": false
                        }
                      }
                    ],
                    "directives": []
                  }
                }
              ],
              "directives": []
            }
          }
        }
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentLine",
      "value": " no default"
    }
  ]
}
